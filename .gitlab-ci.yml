variables:
  PYTHONUSERBASE: ".local"
  IMAGE_PATH: "$CI_REGISTRY/$CI_PROJECT_PATH"


default:
  before_script:
    - export PATH=$PYTHONUSERBASE/bin:$PATH


stages:
  - build
  - test


.build:
  stage: build
  before_script:
    - !reference [default, before_script]
    - pip install --user git+https://gitlab.com/ase/ase.git@master
    - |
      cat << EOF > siteconfig.py
      mpicompiler = 'mpicc'
      libraries = []
      library_dirs = []
      include_dirs = []
      extra_compile_args = ['-O3',
                            '-fPIC',
                            '-g',
                            '-fopenmp',
                            '-Wall',
                            '-Werror',
                            ]
      extra_link_args = ['-fopenmp']

      libraries += ['blas']

      fftw = True
      libraries += ['fftw3']

      scalapack = True
      libraries += ['scalapack-openmpi']

      libraries += ['xc']

      EOF
  after_script:
    - cat configuration.log
  artifacts:
    paths:
      - $PYTHONUSERBASE
      - gpaw.egg-info
      - _gpaw.*.so
    expire_in: 30 mins

.gpu-job:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ "/^gpu-.*/"

build:
  image: $IMAGE_PATH/build:0.1
  extends: .build
  tags:
    - linux
  script:
    - |
      cat << EOF >> siteconfig.py
      extra_compile_args += ['-std=c99']
      EOF
    - cat siteconfig.py
    - pip install --user --editable .
    - gpaw -P 1 info


build-gpaw-python:
  image: $IMAGE_PATH/build:0.1
  extends: .build
  tags:
    - linux
  script:
    - |
      cat << EOF >> siteconfig.py
      extra_compile_args += ['-std=c99']
      parallel_python_interpreter = True
      EOF
    - cat siteconfig.py
    - pip install --user --editable .
    - gpaw-python -m gpaw info


build-cuda:
  image: $IMAGE_PATH/build-cuda:0.1
  extends:
    - .build
    - .gpu-job
  tags:
    - linux
  script:
    - |
      cat << EOF >> siteconfig.py
      cuda = True
      gpu_compiler = 'nvcc'
      gpu_compile_args = ['-g', '-O3', '-gencode arch=compute_60,code=sm_60']
      libraries += ['cudart', 'cublas']
      EOF
    - cat siteconfig.py
    - pip install --user --editable .


test-cuda:
  image: $IMAGE_PATH/run-cuda:0.1
  extends:
    - .gpu-job
  stage: test
  needs:
    - build-cuda
  tags:
    - cuda
  script:
    - nvidia-smi
    - gpaw info
    - pytest -v -m gpu --color=yes


test:
  image: $IMAGE_PATH/run:0.1
  stage: test
  needs:
    - build
  tags:
    - linux
  script:
    - gpaw info
    - OMP_NUM_THREADS=2 pytest -v -m ci -We -Wi::ImportWarning --color=yes


test-gpaw-python:
  image: $IMAGE_PATH/run:0.1
  stage: test
  needs:
    - build-gpaw-python
  tags:
    - linux
  script:
    - gpaw-python -m gpaw info
    - OMP_NUM_THREADS=2 gpaw-python -m pytest -v -m ci -We -Wi::ImportWarning --color=yes


lint:
  image: $IMAGE_PATH/lint:0.1
  stage: build
  tags:
    - linux
  script:
    - python --version
    - flake8 --version
    - flake8 --doctests gpaw
    - >
      flake8
      --doctests
      --exclude "doc/platforms/*,doc/*/summerschool22/*/"
      --extend-ignore E402
      doc
    - >
      flake8
      --doctests
      --extend-ignore E402,E501
      doc/summerschools/summerschool22/catalysis
    - interrogate --version
    - >
      interrogate -m -i
      -f 33.1
      -e gpaw/test
      -e gpaw/point_groups/groups.py
      gpaw
    - python -We:invalid -m compileall -f -q gpaw/


typecheck:
  image: $IMAGE_PATH/typecheck:0.1
  stage: build
  tags:
    - linux
  script:
    - pip install types-PyYAML
    - python --version
    - mypy --version
    - mypy -p gpaw
