import os

import csv

import numpy as np

from ase.tasks.main import run
from ase.data.g2_1 import molecule_names
from ase.data.g2_1 import atom_names

# these results are calculated at g2_1 geometries with mode=fd h=0.12

ref = {'energy': {'NH3': -19.59581818681329, 'S2': -7.0500126722282488, 'SiH2_s3B1d': -8.7741791368885895, 'Li': -0.29335810145933605, 'CH3OH': -30.340391609553862, 'SiH4': -18.878943035665984, 'Si2H6': -30.902139729875707, 'PH3': -15.559898087117469, 'PH2': -10.785014085925921, 'HF': -8.0070732253068275, 'O2': -10.111244947272452, 'SiH3': -13.821691658488907, 'NH': -8.0992643290336304, 'Be': -0.00010297466849492038, 'SH2': -11.147733183208283, 'ClO': -5.826527948657839, 'H2O2': -18.395342951118252, 'NO': -12.520670205664661, 'ClF': -4.2107032395273105, 'LiH': -3.7232686091589353, 'HCO': -17.231071522428902, 'CH3': -18.155545606510387, 'CH4': -24.045830508740355, 'Cl2': -3.5078728406927531, 'Na': -0.21830608107401286, 'HOCl': -11.016383662992522, 'SiH2_s1A1d': -9.4778277699901032, 'SiO': -11.260584671355263, 'F2': -3.7964475763773997, 'P2': -8.9814644171977029, 'Si2': -5.2207342525545979, 'C': -1.3781533546666134, 'CH': -6.1618529158155519, 'CO': -14.944712675138588, 'CN': -13.00846831750011, 'F': -0.74221978230684593, 'H': -1.1158688572315856, 'LiF': -7.0061910480149017, 'O': -1.9798305826147227, 'N': -3.1493213167330145, 'Na2': -1.1967997900146445, 'P': -1.8699796916499039, 'Si': -0.85325351510782332, 'SO2': -17.059544721782299, 'NaCl': -4.6345146761756109, 'Li2': -1.4471494887175911, 'NH2': -13.561497182352539, 'CS': -10.187264180302439, 'C2H6': -40.520995609474319, 'N2': -16.828173087172406, 'C2H4': -31.995516995326174, 'HCN': -19.777012323833162, 'C2H2': -22.962083141115905, 'CH2_s3B1d': -12.029317642085983, 'CH3Cl': -22.391865384574334, 'BeH': -3.5130576720966573, 'CO2': -23.287010408359148, 'CH3SH': -27.598225304195278, 'OH': -7.8398646052323384, 'Cl': -0.33208752602265734, 'S': -1.0308234451815634, 'N2H4': -30.426145528794482, 'H2O': -14.330008818703375, 'SO': -9.0963859317564282, 'CH2_s1A1d': -11.364715756787531, 'H2CO': -22.287910280164585, 'HCl': -6.057618291135161}, 'ea': {'NH3': 13.098890298385518, 'S2': 4.9883657818651219, 'SiH2_s3B1d': 5.6891879073175948, 'CH3OH': 22.518932243346182, 'SiH4': 13.562214091631818, 'Si2H6': 22.500419556270543, 'PH3': 10.342311823772809, 'PH2': 6.6832966798128464, 'HF': 6.148984585768396, 'O2': 6.1515837820430068, 'SiH3': 9.6208315716863275, 'NH': 3.8340741550690307, 'SH2': 7.8851720235635483, 'ClO': 3.5146098400204591, 'H2O2': 12.203944071425635, 'NO': 7.3915183063169243, 'ClF': 3.1363959311978071, 'LiH': 2.3140416504680137, 'HCO': 12.75721872791598, 'CH3': 13.429785680149017, 'CH4': 18.204201725147399, 'Cl2': 2.8436977886474386, 'HOCl': 7.5885966971235561, 'SiH2_s1A1d': 6.3928365404191085, 'SiO': 8.4275005736327167, 'F2': 2.3120080117637078, 'P2': 5.2415050338978952, 'Si2': 3.5142272223389512, 'CH': 3.6678307039173532, 'CO': 11.586728737857252, 'CN': 8.4809936461004831, 'LiF': 5.9706131642487197, 'Na2': 0.76018762786661886, 'SO2': 12.069060111371289, 'NaCl': 4.0841210690789405, 'Li2': 0.86043328579891898, 'NH2': 8.1804381511563538, 'CS': 7.7782873804542616, 'C2H6': 31.069475756751579, 'N2': 10.529530453706377, 'C2H4': 24.775734857066603, 'HCN': 14.133668795201949, 'C2H2': 17.974038717319509, 'CH2_s3B1d': 8.4194265729561995, 'CH3Cl': 17.334017932190307, 'BeH': 2.3970858401965769, 'CO2': 17.949195888463088, 'CH3SH': 20.725773075420758, 'OH': 4.7441651653860299, 'N2H4': 19.664027466402111, 'H2O': 10.11844052162548, 'SO': 6.0857319039601423, 'CH2_s1A1d': 7.7548246876577469, 'H2CO': 16.698188628420077, 'HCl': 4.609661907880918}}

tag = 'pbe_gpaw_nrel08'

def main():

    atoms, task = run('gpaw molecule g2_1 -t ' + tag + ' --atomize -s')

    prop2molecules = {'ea': molecule_names, 'energy': molecule_names + atom_names}
    prop2index = {'ea': 'atomic energy', 'energy': 'energy'}
    prop2prec = {'ea': 0.02, 'energy': 0.05}

    calc = {}

    for p in ['energy', 'ea']:
        calc[p] = {}
        for m in prop2molecules[p]:
            try:
                if p == 'energy':
                    calc[p][m] = task.data[m][prop2index[p]]
                else:
                    # atomization energy
                    calc[p][m] = - calc['energy'][m]
                    calc[p][m] += task.data[m][prop2index[p]] # energy of atoms
            except (KeyError, TypeError):
                calc[p][m] = None
                print 'Missing: ' + m + ' for property ' + p
                pass

        skeys = ref[p].keys()
        skeys.sort()
        for k in skeys:
            assert calc[p][k] is not None, 'Missing: ' + k + ' for property ' + p
            diff = calc[p][k] - ref[p][k]
            assert abs(diff) < prop2prec[p], 'Error: ' + k + ' ' + str(diff) + ' for property ' + p

        outfilename = tag + '_%s.csv' % p

        d = []
        for k in skeys:
            d.append([k, calc[p][k]])
        csvwriter = csv.writer(open(outfilename, 'wb'))
        for row in d:
            csvwriter.writerow(row)

if __name__ == '__main__':
    main()
