import os

import csv

import numpy as np

from ase.tasks.main import run
from ase.data.g2_1 import molecule_names
from ase.data.g2_1 import atom_names

# these results are calculated at relaxed geometries

ref = {'distance': {'NH3': 1.022461536462584, 'S2': 1.9105488253606864, 'SiH2_s3B1d': 1.4988637394109505, 'CH3OH': 1.1042016657669065, 'SiH4': 1.4951245769559194, 'Si2H6': 3.1998588305982198, 'PH3': 1.4318580312873195, 'PH2': 1.4366240774249754, 'HF': 0.93477123612452773, 'O2': 1.2187028508129933, 'SiH3': 1.4969228533354373, 'NH': 1.0507498157506632, 'SH2': 1.3527115694885279, 'ClO': 1.5817590324383826, 'H2O2': 1.8974411583087183, 'NO': 1.1576995837380073, 'ClF': 1.6546075475451805, 'LiH': 1.6108490780083278, 'HCO': 1.1357359033339405, 'CH3': 1.0869606589399097, 'CH4': 1.0966231177845054, 'Cl2': 2.0070458143816152, 'HOCl': 1.7112369785884181, 'SiH2_s1A1d': 1.5392726317955137, 'SiO': 1.5371021620689316, 'F2': 1.4158946042565912, 'P2': 1.9071907339505136, 'Si2': 2.287675444385747, 'CH': 1.1372217276573773, 'CO': 1.1377999214614443, 'CN': 1.174393723344064, 'LiF': 1.6059716078330215, 'Na2': 3.0862854199957086, 'SO2': 1.4554620909718414, 'NaCl': 2.3806984482923914, 'Li2': 2.7288984391669917, 'NH2': 1.037372124213136, 'CS': 1.5463425029046176, 'C2H6': 2.1853462835532671, 'N2': 1.102616767211579, 'C2H4': 2.1213423865026431, 'HCN': 1.0763265387768657, 'C2H2': 1.0714232933136039, 'CH2_s3B1d': 1.0858315391069515, 'CH3Cl': 1.0944520166586214, 'BeH': 1.35811647860635, 'CO2': 1.1724306769115351, 'CH3SH': 1.0961440689183974, 'OH': 0.98526705877383458, 'N2H4': 1.9959978372716169, 'H2O': 0.97151938626557499, 'SO': 1.503517238645635, 'CH2_s1A1d': 1.1230333197227778, 'H2CO': 2.0366052642183483, 'HCl': 1.2904940760710415}, 'energy': {'NH3': -19.604093541761596, 'S2': -7.0804683312588077, 'SiH2_s3B1d': -8.7754613977142206, 'Li': -0.29325154189979041, 'CH3OH': -30.48367097351576, 'SiH4': -18.882143981907912, 'Si2H6': -30.907250178645491, 'PH3': -15.562633351136002, 'PH2': -10.786756900867383, 'HF': -7.967247723970063, 'O2': -10.414140123505815, 'SiH3': -13.82377846633136, 'NH': -8.1019894753736317, 'Be': 0.00013754831537389096, 'SH2': -11.163027319991036, 'ClO': -5.9469738462901436, 'H2O2': -18.666686723010056, 'NO': -12.719996366092152, 'ClF': -4.1711999529987178, 'LiH': -3.7212989252403692, 'HCO': -17.38494489366277, 'CH3': -18.155510668457804, 'CH4': -24.047629357771342, 'Cl2': -3.5107548024967263, 'Na': -0.23781174128243893, 'HOCl': -11.150207815506102, 'SiH2_s1A1d': -9.4791706036810144, 'SiO': -11.383681062715867, 'F2': -3.7137387382872129, 'P2': -8.9817083150696515, 'Si2': -5.2204169566171688, 'C': -1.3763344720086448, 'CH': -6.1604293801448913, 'CO': -15.114048800419079, 'CN': -13.016399531791105, 'F': -0.70287455940513532, 'H': -1.1168762459698993, 'LiF': -6.9622068309468297, 'O': -2.0850234469815638, 'N': -3.1524161338682473, 'Na2': -1.2371732613902486, 'P': -1.8697007924362541, 'Si': -0.85264612095279335, 'SO2': -17.390245594205361, 'NaCl': -4.6863963312485524, 'Li2': -1.4456509870288199, 'NH2': -13.566706745517248, 'CS': -10.207040944980399, 'C2H6': -40.522147356836008, 'N2': -16.851269486446274, 'C2H4': -31.99544906968606, 'HCN': -19.783427939834485, 'C2H2': -22.960434219773898, 'CH2_s3B1d': -12.028303314273645, 'CH3Cl': -22.393398484644006, 'BeH': -3.5134965004797976, 'CO2': -23.602957043751278, 'CH3SH': -27.613828215160154, 'OH': -7.970222986889671, 'Cl': -0.33294439057324066, 'S': -1.0431775521559832, 'N2H4': -30.440118423364371, 'H2O': -14.483404023630852, 'SO': -9.2557732925928029, 'CH2_s1A1d': -11.364408008319192, 'H2CO': -22.434883303817291, 'HCl': -6.0598581435319385}, 'ea': {'NH3': 13.101048669983651, 'S2': 4.9941132269468413, 'SiH2_s3B1d': 5.6890627848216289, 'CH3OH': 22.554808070645954, 'SiH4': 13.561992877075522, 'Si2H6': 22.500700460920509, 'PH3': 10.34230382079005, 'PH2': 6.6833036164913304, 'HF': 6.1474969185950279, 'O2': 6.2440932295426874, 'SiH3': 9.6205036074688692, 'NH': 3.8326970955354849, 'SH2': 7.8860972758952546, 'ClO': 3.529006008735339, 'H2O2': 12.262887337107131, 'NO': 7.4825567852423411, 'ClF': 3.135381003020342, 'LiH': 2.3111711373706796, 'HCO': 12.806710728702662, 'CH3': 13.428547458539462, 'CH4': 18.203789901883098, 'Cl2': 2.8448660213502448, 'HOCl': 7.6153637319813976, 'SiH2_s1A1d': 6.3927719907884226, 'SiO': 8.4460114947815104, 'F2': 2.3079896194769423, 'P2': 5.2423067301971429, 'Si2': 3.5151247147115821, 'CH': 3.6672186621663472, 'CO': 11.652690881428871, 'CN': 8.4876489259142129, 'LiF': 5.9660807296419041, 'Na2': 0.76154977882537078, 'SO2': 12.177021148086251, 'NaCl': 4.1156401993928728, 'Li2': 0.85914790322923906, 'NH2': 8.1805381197092011, 'CS': 7.7875289208157712, 'C2H6': 31.068220936999325, 'N2': 10.54643721870978, 'C2H4': 24.775275141789173, 'HCN': 14.137801087987693, 'C2H2': 17.974012783816811, 'CH2_s3B1d': 8.418216350325201, 'CH3Cl': 17.333490884152425, 'BeH': 2.3967578028252721, 'CO2': 18.056575677779506, 'CH3SH': 20.726811207115929, 'OH': 4.7683232939382076, 'N2H4': 19.667781171748278, 'H2O': 10.16462808470949, 'SO': 6.1275722934552554, 'CH2_s1A1d': 7.754321044370748, 'H2CO': 16.739772892887284, 'HCl': 4.6100375069887987}}

tag = 'pbe_gpaw_nrel_opt'

def main():

    atoms, task = run('gpaw molecule g2_1 -t ' + tag + ' --atomize -s')

    prop2molecules = {'ea': molecule_names,
                      'energy': molecule_names + atom_names,
                      'distance': molecule_names}
    prop2index = {'ea': 'atomic energy', 'energy': 'energy', 'distance': 'distance'}
    prop2prec = {'ea': 0.02, 'energy': 0.05, 'distance': 0.005}

    calc = {}

    for p in ['energy', 'ea', 'distance']:
        calc[p] = {}
        for m in prop2molecules[p]:
            try:
                if p in ['energy', 'distance']:
                    calc[p][m] = task.data[m][prop2index[p]]
                else:
                    # atomization energy
                    calc[p][m] = - calc['energy'][m]
                    calc[p][m] += task.data[m][prop2index[p]] # energy of atoms
            except (KeyError, TypeError):
                calc[p][m] = None
                print 'Missing: ' + m + ' for property ' + p
                pass

        skeys = ref[p].keys()
        skeys.sort()
        for k in skeys:
            assert calc[p][k] is not None, 'Missing: ' + k + ' for property ' + p
            diff = calc[p][k] - ref[p][k]
            assert abs(diff) < prop2prec[p], 'Error: ' + k + ' ' + str(diff) + ' for property ' + p

        outfilename = tag + '_%s.csv' % p

        d = []
        for k in prop2molecules[p]:
            d.append([k, calc[p][k]])
        csvwriter = csv.writer(open(outfilename, 'wb'))
        for row in d:
            csvwriter.writerow(row)

if __name__ == '__main__':
    main()
