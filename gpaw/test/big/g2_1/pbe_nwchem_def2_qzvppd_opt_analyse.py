import os

import csv

import numpy as np

from ase.tasks.main import run
from ase.data.g2_1 import molecule_names
from ase.data.g2_1 import atom_names

# these results are calculated at relaxed geometries

ref = {'distance': {'NH3': 1.0214550147343417, 'S2': 1.909226444930773, 'SiH2_s3B1d': 1.4959758117701643, 'CH3OH': 1.1030844535448712, 'SiH4': 1.4925996591981749, 'Si2H6': 3.1894770187147787, 'PH3': 1.4302601659863721, 'PH2': 1.4346717268375369, 'HF': 0.93024767766719751, 'O2': 1.2177518292845226, 'SiH3': 1.4947637154316251, 'NH': 1.0490884835508614, 'SH2': 1.3513837051001727, 'ClO': 1.5793197420522573, 'H2O2': 1.8958330716525236, 'NO': 1.156790619328925, 'ClF': 1.6500936428996131, 'LiH': 1.6056281159928836, 'HCO': 1.1352789361655016, 'CH3': 1.0861963050210304, 'CH4': 1.0954690924956099, 'Cl2': 2.0051165896353829, 'HOCl': 1.7084164068894601, 'SiH2_s1A1d': 1.5373171969931423, 'SiO': 1.5267775155499548, 'F2': 1.4131037387967056, 'P2': 1.9041728840722083, 'Si2': 2.2844597148466232, 'CH': 1.1353436549320239, 'CO': 1.1353228578574415, 'CN': 1.1734204501040257, 'LiF': 1.5781425105489659, 'Na2': 3.0849004417809258, 'SO2': 1.4535591503219423, 'NaCl': 2.375956045377166, 'Li2': 2.7269446448266184, 'NH2': 1.0360313462587714, 'CS': 1.5453598419904586, 'C2H6': 2.1839921464514007, 'N2': 1.1020010395108386, 'C2H4': 2.1194063248297694, 'HCN': 1.0753374070645108, 'C2H2': 1.0701025663671189, 'CH2_s3B1d': 1.0846126602770281, 'CH3Cl': 1.0934062531916822, 'BeH': 1.3549994786114516, 'CO2': 1.170486102216302, 'CH3SH': 1.0951914666413829, 'OH': 0.98302300558682143, 'N2H4': 1.9932641958773283, 'H2O': 0.9689957468077689, 'SO': 1.5015729306543228, 'CH2_s1A1d': 1.1216809054426011, 'H2CO': 2.0345039370611211, 'HCl': 1.2882940110553078}, 'energy': {'NH3': -1537.8932102701572, 'S2': -21662.652373450823, 'SiH2_s3B1d': -7903.3651685467703, 'Li': -203.05091256761085, 'CH3OH': -3146.761431438445, 'SiH4': -7938.4615430898384, 'Si2H6': -15845.077065956739, 'PH3': -9333.3945039348218, 'PH2': -9316.123740138697, 'HF': -2732.0738778569516, 'O2': -4088.7018992528306, 'SiH3': -7920.9077574036273, 'NH': -1501.4239187420785, 'Be': -398.09853859103947, 'SH2': -10863.933760812806, 'ClO': -14561.285408063524, 'H2O2': -4121.9417690700766, 'NO': -3532.6816767700134, 'ClF': -15231.960222248434, 'LiH': -218.96907143453726, 'HCO': -3096.1951818380926, 'CH3': -1082.7988715085721, 'CH4': -1101.1756308328961, 'Cl2': -25035.885491518307, 'Na': -4412.8227996808337, 'HOCl': -14578.980544432352, 'SiH2_s1A1d': -7904.0658697483941, 'SiO': -9920.2055148405398, 'F2': -5426.9000090033151, 'P2': -18569.696505770662, 'Si2': -15744.414966719036, 'C': -1028.547196666256, 'CH': -1045.8215804930401, 'CO': -3081.4426304822496, 'CN': -2521.0068098554066, 'F': -2712.3065642947436, 'H': -13.60405569717515, 'LiF': -2921.3662713591993, 'O': -2041.2483606505227, 'N': -1483.981485107872, 'Na2': -8826.4081399039987, 'P': -9282.2144876505627, 'Si': -7870.4445140289645, 'SO2': -14923.470837520355, 'NaCl': -16933.432214428583, 'Li2': -406.96848818968698, 'NH2': -1519.3729803246342, 'CS': -11865.161101293492, 'C2H6': -2169.7958129976828, 'N2': -2978.4760025139353, 'C2H4': -2136.2925745709285, 'HCN': -2540.2599155377234, 'C2H2': -2102.2847792279099, 'CH2_s3B1d': -1064.1843674510685, 'CH3Cl': -13603.219836064187, 'BeH': -414.10792412473955, 'CO2': -5129.0801085288595, 'CH3SH': -11932.531761054808, 'OH': -2059.6209904787229, 'Cl': -12516.517962621143, 'S': -10828.826656949794, 'N2H4': -3042.0310600738771, 'H2O': -2078.6212440372983, 'SO': -12876.189938295056, 'CH2_s1A1d': -1063.5112436284683, 'H2CO': -3113.7294275881418, 'HCl': -12534.741344990183}, 'ea': {'NH3': 13.099558070759485, 'S2': 4.9990595512354048, 'SiH2_s3B1d': 5.7125431234562711, 'CH3OH': 22.549651332965368, 'SiH4': 13.60080627217485, 'Si2H6': 22.563703715761221, 'PH3': 10.367849192734866, 'PH2': 6.7011410937848268, 'HF': 6.1632578650328469, 'O2': 6.2051779517851173, 'SiH3': 9.6510762831385364, 'NH': 3.8383779370312823, 'SH2': 7.898992468662982, 'ClO': 3.5190847918584041, 'H2O2': 12.236936374681136, 'NO': 7.4518310116186512, 'ClF': 3.1356953325466748, 'LiH': 2.3141031697512631, 'HCO': 12.795568824138627, 'CH3': 13.439507750790426, 'CH4': 18.212211377939184, 'Cl2': 2.8495662760215055, 'HOCl': 7.6101654635112936, 'SiH2_s1A1d': 6.4132443250800861, 'SiO': 8.5126401610523317, 'F2': 2.2868804138279302, 'P2': 5.2675304695367231, 'Si2': 3.5259386611069203, 'CH': 3.6703281296088335, 'CO': 11.647073165470829, 'CN': 8.4781280812785553, 'LiF': 6.0087944968449847, 'Na2': 0.76254054233140778, 'SO2': 12.147459269515821, 'NaCl': 4.0914521266058728, 'Li2': 0.86666305446527758, 'NH2': 8.1833838224117699, 'CS': 7.7872476774427923, 'C2H6': 31.077085482119401, 'N2': 10.51303229819132, 'C2H4': 24.781958449715603, 'HCN': 14.127178066420129, 'C2H2': 17.982274501047414, 'CH2_s3B1d': 8.4290593904620437, 'CH3Cl': 17.342509685264304, 'BeH': 2.4053298365249134, 'CO2': 18.036190561558215, 'CH3SH': 20.741684650060051, 'OH': 4.7685741310251615, 'N2H4': 19.651867069432228, 'H2O': 10.164771992425358, 'SO': 6.1149206947393395, 'CH2_s1A1d': 7.7559355678617976, 'H2CO': 16.725758877012595, 'HCl': 4.619326671865565}}

tag = 'pbe_nwchem_def2_qzvppd_opt'

def main():

    atoms, task = run('nwchem molecule g2_1 -t ' + tag + ' --atomize -s')

    prop2molecules = {'ea': molecule_names,
                      'energy': molecule_names + atom_names,
                      'distance': molecule_names}
    prop2index = {'ea': 'atomic energy', 'energy': 'energy', 'distance': 'distance'}
    prop2prec = {'ea': 0.01, 'energy': 0.01, 'distance': 0.005}

    calc = {}

    for p in ['energy', 'ea', 'distance']:
        calc[p] = {}
        for m in prop2molecules[p]:
            try:
                if p in ['energy', 'distance']:
                    calc[p][m] = task.data[m][prop2index[p]]
                else:
                    # atomization energy
                    calc[p][m] = - calc['energy'][m]
                    calc[p][m] += task.data[m][prop2index[p]] # energy of atoms
            except (KeyError, TypeError):
                calc[p][m] = None
                print 'Missing: ' + m + ' for property ' + p
                pass

        skeys = ref[p].keys()
        skeys.sort()
        for k in skeys:
            assert calc[p][k] is not None, 'Missing: ' + k + ' for property ' + p
            diff = calc[p][k] - ref[p][k]
            assert abs(diff) < prop2prec[p], 'Error: ' + k + ' ' + str(diff) + ' for property ' + p

        outfilename = tag + '_%s.csv' % p

        d = []
        for k in prop2molecules[p]:
            d.append([k, calc[p][k]])
        csvwriter = csv.writer(open(outfilename, 'wb'))
        for row in d:
            csvwriter.writerow(row)

if __name__ == '__main__':
    main()
