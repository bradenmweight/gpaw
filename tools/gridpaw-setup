#!/usr/bin/env python

# Emacs: treat this as -*- python -*-

from optparse import OptionParser

from gridpaw.atom.generator import Generator, parameters


parser = OptionParser(usage='%prog [options] [elements]',
                      version='%prog 0.1')
parser.add_option('-f', '--xcfunctional', type='string', default='LDA',
                  help='Exchange-Correlation functional (default value LDA)',
                  metavar='<XC>')
parser.add_option('-s', '--scalar-relativistic', action='store_true',
                  help='Do a scalar-relativistic calculation.')
parser.add_option('-r', '--radius', type='string', default=None,
                  help='Cutoff radii',
                  metavar='<rcut>')
parser.add_option('-v', '--potential', type='float', default=None,
                  help='Effective potential at r=0',
                  metavar='<v0>')
parser.add_option('-q', '--quick', action='store_true',
                  help='Skip generation logarithmic derivatives.')
parser.add_option('-a', '--all-electron-only', action='store_true',
                  help='Skip generation of PAW setup.')
parser.add_option('-e', '--extra', type='string', default=None,
                  help='Extra projectors.',
                  metavar='0.0;0.0,1.0;0.0')

options, args = parser.parse_args()

if args:
    atoms = args
else:
    atoms = parameters.keys()

for symbol in atoms:
    g = Generator(symbol, options.xcfunctional,
                  scalarrel=bool(options.scalar_relativistic))
    try:
        core, rcut = parameters[symbol]
        extra = None
    except ValueError:
        core, rcut, extra = parameters[symbol]
    v0 = options.potential
    if options.radius is not None:
        rcut = [float(x) for x in options.radius.split(',')]
    if options.extra is not None:
        extra = {}
        if options.extra != '':
            for l, x in enumerate(options.extra.split(';')):
                extra[l] = [float(y) for y in x.split(',')]
    g.run(core, rcut, extra, logderiv=not options.quick, vt0=v0)

